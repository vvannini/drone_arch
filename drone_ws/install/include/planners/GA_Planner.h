// Generated by gencpp from file planners/GA_Planner.msg
// DO NOT EDIT!


#ifndef PLANNERS_MESSAGE_GA_PLANNER_H
#define PLANNERS_MESSAGE_GA_PLANNER_H

#include <ros/service_traits.h>


#include <planners/GA_PlannerRequest.h>
#include <planners/GA_PlannerResponse.h>


namespace planners
{

struct GA_Planner
{

typedef GA_PlannerRequest Request;
typedef GA_PlannerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GA_Planner
} // namespace planners


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::planners::GA_Planner > {
  static const char* value()
  {
    return "4d22e4fe344ad31e2831d2deed99337f";
  }

  static const char* value(const ::planners::GA_Planner&) { return value(); }
};

template<>
struct DataType< ::planners::GA_Planner > {
  static const char* value()
  {
    return "planners/GA_Planner";
  }

  static const char* value(const ::planners::GA_Planner&) { return value(); }
};


// service_traits::MD5Sum< ::planners::GA_PlannerRequest> should match 
// service_traits::MD5Sum< ::planners::GA_Planner > 
template<>
struct MD5Sum< ::planners::GA_PlannerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::planners::GA_Planner >::value();
  }
  static const char* value(const ::planners::GA_PlannerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::planners::GA_PlannerRequest> should match 
// service_traits::DataType< ::planners::GA_Planner > 
template<>
struct DataType< ::planners::GA_PlannerRequest>
{
  static const char* value()
  {
    return DataType< ::planners::GA_Planner >::value();
  }
  static const char* value(const ::planners::GA_PlannerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::planners::GA_PlannerResponse> should match 
// service_traits::MD5Sum< ::planners::GA_Planner > 
template<>
struct MD5Sum< ::planners::GA_PlannerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::planners::GA_Planner >::value();
  }
  static const char* value(const ::planners::GA_PlannerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::planners::GA_PlannerResponse> should match 
// service_traits::DataType< ::planners::GA_Planner > 
template<>
struct DataType< ::planners::GA_PlannerResponse>
{
  static const char* value()
  {
    return DataType< ::planners::GA_Planner >::value();
  }
  static const char* value(const ::planners::GA_PlannerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PLANNERS_MESSAGE_GA_PLANNER_H
