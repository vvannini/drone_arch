<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	default="/home/vannini/drone_arch/Data/domain_ijcai_types.pddl" />	
	<!--arg name="domain_path"	default="$(find rosplan_demos)/common/testDomain.pddl" /-->

	<arg name="problem_path"	default="/home/vannini/drone_arch/Data/problem_ijcai_types.pddl" />
	<!--arg name="problem_path"	default="$(find rosplan_demos)/common/testProblem.pddl" /-->

	<arg name="use_unknowns" default="false"/>
  <arg name="kb_rate" default="100"/>

  <!-- rosplan knowledge base -->
  <node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
    <param name="domain_path" value="$(arg domain_path)" />
    <!-- conditional planning flags -->
    <param name="use_unknowns" value="$(arg use_unknowns)" />
    <param name="kb_rate" value="$(arg kb_rate)" />
  </node>


	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="domain_path"      value="$(arg domain_path)" />
		<arg name="problem_path"     value="/home/vannini/drone_arch/Data/problem.pddl" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>
	
	<!-- scene database (MongoDB) -->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/"/>
	</include>

	<!-- planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic"    value="false" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="$(arg problem_path)" />
		<arg name="data_path"            value="/home/vannini/drone_arch/Data/" />
		<arg name="planner_command"      value="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
	</include>

	<!-- plan parsing -->
	<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="planner_topic"  value="/rosplan_planner_interface/planner_output" />
		<param name="plan_topic"     value="complete_plan" />
	</node>


	<!-- plan dispatching -->
	<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
		<param name="knowledge_base"        value="rosplan_knowledge_base" />
		<param name="plan_topic"            value="/rosplan_parsing_interface/complete_plan" />
		<param name="action_dispatch_topic" value="action_dispatch" />
		<param name="action_feedback_topic" value="action_feedback" />
	</node>

</launch>
